{"version":3,"sources":["components/lists/ListHead.js","constants/window.js","components/lists/ListBody.js","components/lists/InfinityList.js","constants/common.js","components/lists/MainSportsList.js","components/ListIndex.js","components/Top.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["ListHead","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","startIndex","parentId","retArticle","parents","forEach","parent","console","log","article","items","parent_id","Number","id","getArticleById","react_default","a","createElement","ListItem_default","className","ListItemIcon","href","target","Inbox_default","ListItemText_default","primary","head","IconButton_default","edge","aria-label","onClick","handleClickSecondIcon","KeyboardArrowRight_default","React","Component","withStyles","theme","articleHeader","width","height","getWindowSize","w","window","d","document","e","documentElement","g","getElementsByTagName","innerWidth","clientWidth","innerHeight","clientHeight","getListHeight","Math","floor","RowContainer","styled","div","_templateObject","ListBody","regBody","body","replacedText","reactStringReplace","match","i","key","concat","moreItemsLoading","page","index","userId","user_id","profileImage","user_image","secondary","FavoriteBorder_default","style","fontSize","favorite","Cached_default","retweet","alignItems","button","_objectSpread","ListItemAvatar_default","Avatar_default","alt","src","length","backgroundColor","ListBodyNode","styles","infinateList","marginTop","InfinityList","_ref","hasNextPage","loadMoreItems","handleScroll","Row","_ref2","ref","lists_ListBody","itemCount","dist_index_esm","isItemLoaded","onScrollHandler","_ref3","onItemsRendered","itemHeight","index_esm","itemSize","HOSTNAME","PRD","DEV","getUrl","path","hostName","location","port","MainSportsList","setState","stopIndex","fetch","PATH","response","json","data","children","assign","reactions","push","classes","root","lists_ListHead","lists_InfinityList","bind","palette","background","paper","listSection","ul","padding","ListIndex","offset","currentPosition","lists_MainSportsList","monsters","Top","isLoaded","error","_this2","then","res","result","components_ListIndex","App","pathname","ReactGA","set","pageview","components_Top","createMuiTheme","main","red","A400","default","Boolean","hostname","initialize","history","createBrowserHistory","listen","ReactDOM","render","ThemeProvider","CssBaseline","react_router_dom","react_router","exact","component","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8456124b.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { withStyles } from \"@material-ui/core\"\nimport ListItem from \"@material-ui/core/ListItem/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\"\nimport \"../../scss/App.scss\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport InboxIcon from \"@material-ui/icons/Inbox\"\nimport IconButton from \"@material-ui/core/IconButton/IconButton\"\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\"\n\nconst styles = theme => ({\n  articleHeader: {\n    width: \"100%\",\n    height: 30,\n  },\n})\n\nclass ListHead extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { startIndex: this.props.startIndex }\n  }\n\n  getArticleById(parentId) {\n    const parents = this.props.parents\n    var retArticle\n    if (parents) {\n      parents.forEach(parent => {\n        if (parent[\"id\"] === parentId) {\n          retArticle = parent\n        }\n      })\n    }\n    return retArticle\n  }\n\n  handleClickSecondIcon() {\n    console.log(this)\n  }\n\n  render() {\n    // const { classes } = this.props\n    const article = this.props.items[this.props.startIndex] // 今表示中の記事\n\n    if (article) {\n      var parentId = article.parent_id\n      if (Number(parentId) === 0) {\n        parentId = article.id\n      }\n      const parent = this.getArticleById(parentId)\n      if (parent) {\n        return (\n          <ListItem className={\"ArticleHeader\"}>\n            <ListItemIcon>\n              <a href={\"https://twitter.com/sportskwkm/\"} target={\"_blank\"}>\n                <InboxIcon />\n              </a>\n            </ListItemIcon>\n\n            <ListItemText\n              className={\"ArticleHeaderText\"}\n              primary={parent.head}\n            />\n            <IconButton\n              edge=\"end\"\n              aria-label=\"comments\"\n              onClick={this.handleClickSecondIcon}\n            >\n              <KeyboardArrowRight />\n            </IconButton>\n          </ListItem>\n        )\n      }\n    }\n    return null\n  }\n}\n\nListHead.propTypes = {\n  startIndex: PropTypes.number.isRequired,\n  parents: PropTypes.array.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nexport default withStyles(styles)(ListHead)\n","export function getWindowSize() {\n  var w = window\n  var d = document\n  var e = d.documentElement\n  var g = d.getElementsByTagName(\"body\")[0]\n  var width = w.innerWidth || e.clientWidth || g.clientWidth\n  var height = w.innerHeight || e.clientHeight || g.clientHeight\n\n  return {\n    width: width,\n    height: height,\n  }\n}\n\n// 画面の幅を考慮に入れてリストの高さを決定\n// height ✕ width = 75000 程度\nexport function getListHeight() {\n  const win = getWindowSize()\n  const baseTotal = 80000\n  const baseWidth = 400\n  const widthCoefficient = 0.8\n\n  const widthFluctuation = (win.width - baseWidth) * widthCoefficient\n\n  const height = baseTotal / (baseWidth + widthFluctuation)\n  return Math.floor(height)\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport ListItem from \"@material-ui/core/ListItem/ListItem\"\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar/ListItemAvatar\"\nimport Avatar from \"@material-ui/core/Avatar/Avatar\"\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\"\nimport reactStringReplace from \"react-string-replace\"\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\"\nimport Cached from \"@material-ui/icons/Cached\"\n// import FavoriteBorder from \"@material-ui/core/SvgIcon/SvgIcon\"\nimport * as window from \"../../constants/window\"\nimport styled from \"styled-components\"\n\nconst RowContainer = styled.div`\n  position: relative;\n  width: 100px;\n`\n\nclass ListBody extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      items: [],\n      parents: [],\n      moreItemsLoading: false,\n      page: 0,\n      startIndex: 0,\n    }\n  }\n\n  regBody = body => {\n    let replacedText\n\n    // Match URLs\n    replacedText = reactStringReplace(body, /(https?:\\/\\/\\S+)/g, (match, i) => (\n      <a className={\"link\"} key={match + i} href={match}>\n        {match}\n      </a>\n    ))\n\n    // Match @-mentions\n    replacedText = reactStringReplace(replacedText, /@(\\w+)/g, (match, i) => (\n      <a\n        className={\"mention\"}\n        key={match + i}\n        href={`https://twitter.com/${match}`}\n      >\n        @{match}\n      </a>\n    ))\n\n    // Match hashtags\n    replacedText = reactStringReplace(\n      replacedText,\n      /#([A-Za-z0-9-_ぁ-ヶ亜-黑ー]+)/g,\n      (match, i) => (\n        <a\n          className={\"hash\"}\n          key={match + i}\n          href={`https://twitter.com/hashtag/${match}`}\n        >\n          #{match}\n        </a>\n      )\n    )\n    return <span>{replacedText}</span>\n  }\n\n  ListBodyNode(index) {\n    let userId = this.props.items[index].user_id\n    if (Number(userId) === 0) {\n      userId = \"1093499946609762305\"\n    }\n    const profileImage = this.props.items[index].user_image\n    const secondary = (\n      <span className={\"secondary\"}>\n        <FavoriteBorder className={\"favorite\"} style={{ fontSize: 15 }} />\n        <span>{this.props.items[index].favorite}</span>\n        <Cached className={\"retweet\"} style={{ fontSize: 15 }} />\n        <span>{this.props.items[index].retweet}</span>\n      </span>\n    )\n    return (\n      <ListItem\n        alignItems=\"center\"\n        button\n        className={\"InfiniteRow\"}\n        style={{ ...this.props.style, height: window.getListHeight() + \"px\" }}\n      >\n        <ListItemAvatar>\n          <a\n            href={\"https://twitter.com/intent/user?user_id=\" + userId}\n            target={\"_blank\"}\n          >\n            <Avatar alt=\"Cindy Baker\" src={profileImage} />\n          </a>\n        </ListItemAvatar>\n\n        <ListItemText\n          className={\"InfiniteRowBody\"}\n          primary={this.regBody(this.props.items[index].body)}\n          secondary={secondary}\n        />\n      </ListItem>\n    )\n  }\n\n  render() {\n    const itemLoading = this.props.index >= this.props.items.length\n\n    if (itemLoading) {\n      return (\n        <RowContainer\n          style={{ ...this.props.style, backgroundColor: \"grey\" }}\n        />\n      )\n    } else {\n      return this.ListBodyNode(this.props.index)\n    }\n  }\n}\n\nListBody.propTypes = {\n  index: PropTypes.number.isRequired,\n  style: PropTypes.object.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nexport default ListBody\n","import React from \"react\"\nimport { FixedSizeList } from \"react-window\"\nimport InfiniteLoader from \"react-window-infinite-loader\"\nimport * as window from \"../../constants/window\"\nimport \"../../scss/List.scss\"\nimport ListBody from \"./ListBody\"\n\nconst HeaderHeight = 50\nconst styles = theme => ({\n  infinateList: {\n    width: \"100%\",\n    marginTop: HeaderHeight,\n    // backgroundColor: theme.palette.background.paper,\n  },\n})\n\nconst InfinityList = ({\n  items,\n  moreItemsLoading,\n  hasNextPage,\n  loadMoreItems,\n  handleScroll,\n}) => {\n  const Row = ({ index, style, ref }) => {\n    return <ListBody items={items} style={style} index={index} />\n  }\n\n  const itemCount = hasNextPage ? items.length + 1 : items.length\n\n  const FixedList = ({ onItemsRendered, ref }) => {\n    const win = window.getWindowSize()\n    const height = win.height - HeaderHeight\n    const itemHeight = window.getListHeight()\n    return (\n      <FixedSizeList\n        className={\"InfiniteList\"}\n        height={height}\n        width={\"100%\"}\n        itemCount={itemCount}\n        itemSize={itemHeight}\n        onItemsRendered={onItemsRendered}\n        ref={ref}\n      >\n        {Row}\n      </FixedSizeList>\n    )\n  }\n\n  return (\n    <InfiniteLoader\n      className={styles.infinateList}\n      isItemLoaded={index => index < items.length - 1}\n      itemCount={itemCount}\n      loadMoreItems={loadMoreItems}\n      onScrollHandler={handleScroll}\n    >\n      {FixedList}\n    </InfiniteLoader>\n  )\n}\n\nexport default InfinityList\n","export const HOSTNAME = {\n  PRD: \"https://ts.2chx.net/Api/get\",\n  DEV: \"https://ts.2chx.net/Api/get\", // \"http://asuseka.net:8888/Api/get\",\n}\n\n/**\n * removeSlashEndOfPath\n * パスの末尾のスラッシュを削除\n */\nexport function removeSlashEndOfPath(path) {\n  if (path.match(/\\/$/)) {\n    return path.slice(0, -1)\n  }\n  return path\n}\n\n/**\n * getUrl\n * APIのURLを取得\n */\nexport function getUrl(path) {\n  const hostName = HOSTNAME[getEnv()]\n  if (!path) {\n    return hostName\n  } else {\n    return hostName + \"/\" + path\n  }\n}\n\n/**\n * getEnv\n * 現在の環境を取得\n */\nexport function getEnv() {\n  if (window.location.port === \"3001\") {\n    return \"DEV\"\n  } else {\n    return \"PRD\"\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { withStyles } from \"@material-ui/core/styles/index\"\n\n// import ListItem from \"@material-ui/core/ListItem/index\"\n// import ListItemText from \"@material-ui/core/ListItemText/index\"\n// import StarBorder from \"@material-ui/icons/StarBorder\"\nimport ListHead from \"./ListHead\"\nimport VirtualizedTable from \"./InfinityList\"\nimport * as PATH from \"../../constants/common\"\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  listSection: {\n    backgroundColor: \"inherit\",\n  },\n  ul: {\n    backgroundColor: \"inherit\",\n    padding: 0,\n  },\n})\n\nclass MainSportsList extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      items: [],\n      parents: [],\n      moreItemsLoading: false,\n      page: 0,\n      startIndex: 0,\n    }\n  }\n\n  async loadMoreItems(startIndex, stopIndex) {\n    const API_LIMIT = 23 // 本来２４にしたいが、goバッチ側でなぜか23が保存されていない\n    console.log(\"Loading...\", this.state.items.length, startIndex)\n\n    // 24以上は実行しない\n    if (this.state.page >= API_LIMIT) {\n      return\n    }\n    this.setState({ moreItemsLoading: true })\n\n    const response = await fetch(\n      PATH.getUrl(\"?beforeDay=2&country=\" + this.state.page)\n    )\n    const data = await response.json()\n    var items = []\n    var parents = []\n\n    // 親記事１件ごとにリアクションを挿入していく\n    data.forEach(parent => {\n      const children = Object.assign({}, parent.reactions)\n      parent.reactions = null\n      items.push(parent)\n      parents.push(parent)\n      // リアクションごとの処理\n      if (children) {\n        for (const key in children) {\n          items.push(children[key])\n        }\n      }\n    })\n    this.setState({\n      moreItemsLoading: false,\n      page: this.state.page + 1,\n      items: this.state.items.concat(items),\n      parents: this.state.parents.concat(parents),\n    })\n  }\n\n  handleScroll = startIndex => {\n    this.setState({ startIndex: startIndex })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <ListHead\n          startIndex={this.state.startIndex}\n          parents={this.state.parents}\n          items={this.state.items}\n        />\n        <VirtualizedTable\n          items={this.state.items}\n          hasNextPage={true}\n          moreItemsLoading={this.state.moreItemsLoading}\n          loadMoreItems={this.loadMoreItems.bind(this)}\n          handleScroll={this.handleScroll.bind(this)}\n        />\n      </div>\n    )\n  }\n}\n\nMainSportsList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  monsters: PropTypes.array.isRequired,\n}\n\nexport default withStyles(styles)(MainSportsList)\n","import React from \"react\"\nimport MainSportsList from \"./lists/MainSportsList\"\nimport PropTypes from \"prop-types\"\n\nclass ListIndex extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { offset: 0, currentPosition: 0 }\n  }\n\n  render() {\n    return (\n      <div>\n        <MainSportsList monsters={this.props.monsters} />\n      </div>\n    )\n  }\n}\n\nListIndex.propTypes = {\n  monsters: PropTypes.array.isRequired,\n}\n\nexport default ListIndex\n","import React from \"react\"\nimport ListIndex from \"./ListIndex\"\nimport * as PATH from \"../constants/common\"\nclass Top extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoaded: false,\n      error: null,\n      items: [],\n    }\n  }\n\n  componentDidMount() {\n    fetch(PATH.getUrl(\"?country=13\"))\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            items: result,\n          })\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error: error,\n          })\n        }\n      )\n  }\n\n  render() {\n    return <ListIndex monsters={this.state.items} />\n  }\n}\n\nexport default Top\n","import React from \"react\"\nimport Top from \"./components/Top\"\nimport ReactGA from \"react-ga\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  componentDidMount() {\n    const { pathname } = this.props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n  }\n\n  render() {\n    return <Top />\n  }\n}\n\nexport default App\n","import { red } from \"@material-ui/core/colors\"\nimport { createMuiTheme } from \"@material-ui/core/styles\"\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n})\n\nexport default theme\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport { ThemeProvider } from \"@material-ui/styles\"\nimport App from \"./App\"\nimport theme from \"./theme\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport ReactGA from \"react-ga\"\nimport createBrowserHistory from \"history/createBrowserHistory\"\n// import Top from \"./components/Top\"\n\n/**\n * gaの設定\n * routerの設定\n * @ryokwkm\n */\nconst Home = () => (\n  <div>\n    <h2>Home</h2>\n    <p>Welcome to ようこそ</p>\n  </div>\n)\n\nconst About = () => (\n  <div>\n    <h2>About</h2>\n    <p>フレンズに投票するページです</p>\n  </div>\n)\n\nReactGA.initialize(\"UA-15142129-4\")\nconst history = createBrowserHistory()\nhistory.listen(({ pathname }) => {\n  ReactGA.set({ page: pathname })\n  ReactGA.pageview(pathname)\n})\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"))\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    {/* <App /> */}\n    <Router history={history}>\n      <div>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/home\" component={Home} />\n      </div>\n    </Router>\n  </ThemeProvider>,\n  document.querySelector(\"#root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
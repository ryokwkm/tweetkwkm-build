{"version":3,"sources":["components/lists/ListHead.js","../../react-window-infinite-loader/dist/index.esm.js","constants/window.js","components/lists/InfinityList.js","constants/common.js","components/lists/MainSportsList.js","components/ListIndex.js","components/Top.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["ListHead","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","startIndex","parentId","retArticle","parents","forEach","parent","title","article","items","parent_id","Number","id","getArticleById","head","react_default","a","createElement","ListItem_default","className","ListItemText_default","primary","React","Component","withStyles","theme","articleHeader","width","height","index_esm_classCallCheck","instance","Constructor","TypeError","index_esm_createClass","defineProperties","target","i","length","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","prototype","index_esm_possibleConstructorReturn","self","ReferenceError","slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","sliceIterator","dist_index_esm","_PureComponent","InfiniteLoader","_ref","_temp","_len","arguments","args","_key","__proto__","apply","concat","_lastRenderedStartIndex","_lastRenderedStopIndex","_memoizedUnloadedRanges","_onItemsRendered","_ref2","visibleStartIndex","visibleStopIndex","onScrollHandler","_ensureRowsLoaded","_setRef","listRef","_listRef","subClass","superClass","create","constructor","setPrototypeOf","index_esm_inherits","node_modules_react","autoReload","children","onItemsRendered","ref","stopIndex","_props","isItemLoaded","itemCount","_props$minimumBatchSi","minimumBatchSize","_props$threshold","threshold","unloadedRanges","rangeStartIndex","rangeStopIndex","_index","potentialStopIndex","Math","min","max","_index2","firstRange","_index3","scanForUnloadedRanges","find","_ref3","index","_ref4","_loadUnloadedRanges","_this2","loadMoreItems","loadMoreRows","_ref5","_ref6","promise","then","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","resetAfterIndex","_getItemStyleCache","forceUpdate","getWindowSize","w","window","d","document","e","documentElement","g","getElementsByTagName","innerWidth","clientWidth","innerHeight","clientHeight","MyListHeight","win","console","log","floor","styles","infinateList","marginTop","RowContainer","styled","div","_templateObject","InfinityList","hasNextPage","moreItemsLoading","handleScroll","Row","style","objectSpread","backgroundColor","ListItem_ListItem","ListItemText_ListItemText","secondary","body","itemHeight","index_esm","itemSize","HOSTNAME","PRD","DEV","getUrl","path","hostName","location","port","MainSportsList","setState","page","fetch","PATH","response","json","data","assign","reactions","classes","root","lists_ListHead","lists_InfinityList","bind","palette","background","paper","listSection","ul","padding","ListIndex","offset","currentPosition","lists_MainSportsList","monsters","Top","isLoaded","error","res","result","components_ListIndex","Home","About","App","react_router_dom","react_router","exact","component","createMuiTheme","main","red","A400","default","Boolean","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","src_App_0","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20e228cf.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { withStyles } from \"@material-ui/core\"\nimport ListItem from \"@material-ui/core/ListItem/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\"\nimport \"../../App.css\"\n\nconst styles = theme => ({\n  articleHeader: {\n    width: \"100%\",\n    height: 30,\n  },\n})\n\nclass ListHead extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { startIndex: this.props.startIndex }\n  }\n\n  getArticleById(parentId) {\n    const parents = this.props.parents\n    var retArticle\n    if (parents) {\n      parents.forEach(parent => {\n        if (parent[\"id\"] === parentId) {\n          retArticle = parent\n        }\n      })\n    }\n    return retArticle\n  }\n\n  render() {\n    // const { classes } = this.props\n    var title = \"\"\n    // var body = \"\"\n    const article = this.props.items[this.props.startIndex] // 今表示中の記事\n\n    if (article) {\n      var parentId = article.parent_id\n      if (Number(parentId) === 0) {\n        parentId = article.id\n      }\n      const parent = this.getArticleById(parentId)\n      if (parent) {\n        title = parent.head\n        // body = parent.body\n      }\n    }\n    return (\n      <ListItem className={\"ArticleHeader\"}>\n        <ListItemText primary={title} />\n      </ListItem>\n    )\n  }\n}\n\nListHead.propTypes = {\n  startIndex: PropTypes.number.isRequired,\n  parents: PropTypes.array.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nexport default withStyles(styles)(ListHead)\n","import { PureComponent } from 'react';\n\nfunction isRangeVisible(_ref) {\n  var lastRenderedStartIndex = _ref.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref.lastRenderedStopIndex,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n\nfunction scanForUnloadedRanges(_ref) {\n  var isItemLoaded = _ref.isItemLoaded,\n      itemCount = _ref.itemCount,\n      minimumBatchSize = _ref.minimumBatchSize,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var _index = startIndex; _index <= stopIndex; _index++) {\n    var loaded = isItemLoaded(_index);\n\n    if (!loaded) {\n      rangeStopIndex = _index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = _index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push([rangeStartIndex, rangeStopIndex]);\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), itemCount - 1);\n\n    for (var _index2 = rangeStopIndex + 1; _index2 <= potentialStopIndex; _index2++) {\n      if (!isItemLoaded(_index2)) {\n        rangeStopIndex = _index2;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push([rangeStartIndex, rangeStopIndex]);\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstRange = unloadedRanges[0];\n\n    while (firstRange[1] - firstRange[0] + 1 < minimumBatchSize && firstRange[0] > 0) {\n      var _index3 = firstRange[0] - 1;\n\n      if (!isItemLoaded(_index3)) {\n        firstRange[0] = _index3;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar InfiniteLoader = function (_PureComponent) {\n  inherits(InfiniteLoader, _PureComponent);\n\n  function InfiniteLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, InfiniteLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = InfiniteLoader.__proto__ || Object.getPrototypeOf(InfiniteLoader)).call.apply(_ref, [this].concat(args))), _this), _this._lastRenderedStartIndex = -1, _this._lastRenderedStopIndex = -1, _this._memoizedUnloadedRanges = [], _this._onItemsRendered = function (_ref2) {\n      var visibleStartIndex = _ref2.visibleStartIndex,\n          visibleStopIndex = _ref2.visibleStopIndex;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!Number.isInteger(visibleStartIndex) || !Number.isInteger(visibleStopIndex)) {\n          console.warn('Invalid onItemsRendered signature; please refer to InfiniteLoader documentation.');\n        }\n\n        if (typeof _this.props.loadMoreRows === 'function') {\n          console.warn('InfiniteLoader \"loadMoreRows\" prop has been renamed to \"loadMoreItems\".');\n        }\n      }\n\n      _this._lastRenderedStartIndex = visibleStartIndex;\n      _this._lastRenderedStopIndex = visibleStopIndex;\n\n      _this.props.onScrollHandler(visibleStartIndex, visibleStopIndex);\n\n      _this._ensureRowsLoaded(visibleStartIndex, visibleStopIndex);\n    }, _this._setRef = function (listRef) {\n      _this._listRef = listRef;\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(InfiniteLoader, [{\n    key: 'resetloadMoreItemsCache',\n    value: function resetloadMoreItemsCache() {\n      var autoReload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this._memoizedUnloadedRanges = [];\n\n      if (autoReload) {\n        this._ensureRowsLoaded(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this._listRef == null) {\n          console.warn('Invalid list ref; please refer to InfiniteLoader documentation.');\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onItemsRendered: this._onItemsRendered,\n        ref: this._setRef\n      });\n    }\n  }, {\n    key: '_ensureRowsLoaded',\n    value: function _ensureRowsLoaded(startIndex, stopIndex) {\n      var _props = this.props,\n          isItemLoaded = _props.isItemLoaded,\n          itemCount = _props.itemCount,\n          _props$minimumBatchSi = _props.minimumBatchSize,\n          minimumBatchSize = _props$minimumBatchSi === undefined ? 10 : _props$minimumBatchSi,\n          _props$threshold = _props.threshold,\n          threshold = _props$threshold === undefined ? 15 : _props$threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isItemLoaded: isItemLoaded,\n        itemCount: itemCount,\n        minimumBatchSize: minimumBatchSize,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(itemCount - 1, stopIndex + threshold)\n      }); // Avoid calling load-rows unless range has changed.\n      // This shouldn't be strictly necsesary, but is maybe nice to do.\n\n      if (this._memoizedUnloadedRanges.length !== unloadedRanges.length || this._memoizedUnloadedRanges.find(function (_ref3, index) {\n        var _ref4 = slicedToArray(_ref3, 2),\n            startIndex = _ref4[0],\n            stopIndex = _ref4[1];\n\n        return unloadedRanges[index][0] !== startIndex || unloadedRanges[index][1] !== stopIndex;\n      })) {\n        this._memoizedUnloadedRanges = unloadedRanges;\n\n        this._loadUnloadedRanges(unloadedRanges);\n      }\n    }\n  }, {\n    key: '_loadUnloadedRanges',\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this; // loadMoreRows was renamed to loadMoreItems in v1.0.3; will be removed in v2.0\n\n\n      var loadMoreItems = this.props.loadMoreItems || this.props.loadMoreRows;\n      unloadedRanges.forEach(function (_ref5) {\n        var _ref6 = slicedToArray(_ref5, 2),\n            startIndex = _ref6[0],\n            stopIndex = _ref6[1];\n\n        var promise = loadMoreItems(startIndex, stopIndex);\n\n        if (promise != null) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: startIndex,\n              stopIndex: stopIndex\n            })) {\n              // Handle an unmount while promises are still in flight.\n              if (_this2._listRef == null) {\n                return;\n              } // Resize cached row sizes for VariableSizeList,\n              // otherwise just re-render the list.\n\n\n              if (typeof _this2._listRef.resetAfterIndex === 'function') {\n                _this2._listRef.resetAfterIndex(startIndex, true);\n              } else {\n                // HACK reset temporarily cached item styles to force PureComponent to re-render.\n                // This is pretty gross, but I'm okay with it for now.\n                // Don't judge me.\n                if (typeof _this2._listRef._getItemStyleCache === 'function') {\n                  _this2._listRef._getItemStyleCache(-1);\n                }\n\n                _this2._listRef.forceUpdate();\n              }\n            }\n          });\n        }\n      });\n    }\n  }]);\n  return InfiniteLoader;\n}(PureComponent);\n\nexport default InfiniteLoader;","export function getWindowSize() {\n  var w = window\n  var d = document\n  var e = d.documentElement\n  var g = d.getElementsByTagName(\"body\")[0]\n  var width = w.innerWidth || e.clientWidth || g.clientWidth\n  var height = w.innerHeight || e.clientHeight || g.clientHeight\n\n  return {\n    width: width,\n    height: height,\n  }\n}\n\n// 画面の幅を考慮に入れてリストの高さを決定\n// height ✕ width = 60000 程度\nexport function getListHeight() {\n  const win = getWindowSize()\n\n  const height = 60000 / win.width\n  console.log(win, height)\n  return Math.floor(height)\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { FixedSizeList } from \"react-window\"\nimport InfiniteLoader from \"react-window-infinite-loader\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport * as window from \"../../constants/window\"\nimport \"../../App.css\"\n\nconst HeaderHeight = 30\nconst MyListHeight = window.getListHeight()\nconst styles = theme => ({\n  infinateList: {\n    width: \"100%\",\n    marginTop: HeaderHeight,\n    // maxWidth: 360,\n  },\n})\n\nconst RowContainer = styled.div`\n  position: relative;\n  width: 100px;\n`\n\nconst InfinityList = ({\n  items,\n  moreItemsLoading,\n  hasNextPage,\n  loadMoreItems,\n  handleScroll,\n}) => {\n  //\n\n  const Row = ({ index, style, ref }) => {\n    const itemLoading = index >= items.length\n\n    if (itemLoading) {\n      return <RowContainer style={{ ...style, backgroundColor: \"grey\" }} />\n    } else {\n      return (\n        <ListItem\n          className={\"InfiniteRow\"}\n          style={{ ...style, height: MyListHeight + \"px\" }}\n        >\n          <ListItemText secondary={items[index].body} />\n        </ListItem>\n      )\n    }\n  }\n\n  const itemCount = hasNextPage ? items.length + 1 : items.length\n\n  const FixedList = ({ onItemsRendered, ref }) => {\n    const win = window.getWindowSize()\n    const height = win.height - HeaderHeight\n    const itemHeight = MyListHeight\n    return (\n      <FixedSizeList\n        height={height}\n        width={\"100%\"}\n        itemCount={itemCount}\n        itemSize={itemHeight}\n        onItemsRendered={onItemsRendered}\n        ref={ref}\n      >\n        {Row}\n      </FixedSizeList>\n    )\n  }\n\n  return (\n    <InfiniteLoader\n      className={styles.infinateList}\n      isItemLoaded={index => index < items.length - 1}\n      itemCount={itemCount}\n      loadMoreItems={loadMoreItems}\n      onScrollHandler={handleScroll}\n    >\n      {/* {({ onItemsRendered, ref }) => ( */}\n      {/* <FixedSizeList */}\n      {/* height={300} */}\n      {/* width={\"100%\"} */}\n      {/* itemCount={itemCount} */}\n      {/* itemSize={100} */}\n      {/* onItemsRendered={onItemsRendered} */}\n      {/* ref={ref} */}\n      {/* > */}\n      {/* {Row} */}\n      {/* </FixedSizeList> */}\n      {/* )} */}\n      {FixedList}\n    </InfiniteLoader>\n  )\n}\n\nexport default InfinityList\n","export const HOSTNAME = {\n  PRD: \"http://ts.2chx.net/Api/get\",\n  DEV: \"http://ts.2chx.net/Api/get\",\n}\n\n/**\n * removeSlashEndOfPath\n * パスの末尾のスラッシュを削除\n */\nexport function removeSlashEndOfPath(path) {\n  if (path.match(/\\/$/)) {\n    return path.slice(0, -1)\n  }\n  return path\n}\n\n/**\n * getUrl\n * APIのURLを取得\n */\nexport function getUrl(path) {\n  const hostName = HOSTNAME[getEnv()]\n  if (!path) {\n    return hostName\n  } else {\n    return hostName + \"/\" + path\n  }\n}\n\n/**\n * getEnv\n * 現在の環境を取得\n */\nexport function getEnv() {\n  if (window.location.port === \"3001\") {\n    return \"DEV\"\n  } else {\n    return \"PRD\"\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { withStyles } from \"@material-ui/core/styles/index\"\n\n// import ListItem from \"@material-ui/core/ListItem/index\"\n// import ListItemText from \"@material-ui/core/ListItemText/index\"\n// import StarBorder from \"@material-ui/icons/StarBorder\"\nimport ListHead from \"./ListHead\"\nimport VirtualizedTable from \"./InfinityList\"\nimport * as PATH from \"../../constants/common\"\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  listSection: {\n    backgroundColor: \"inherit\",\n  },\n  ul: {\n    backgroundColor: \"inherit\",\n    padding: 0,\n  },\n})\n\nclass MainSportsList extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      items: [],\n      parents: [],\n      moreItemsLoading: false,\n      page: 0,\n      startIndex: 0,\n    }\n  }\n\n  async loadMoreItems(startIndex, stopIndex) {\n    const API_LIMIT = 23 // 本来２４にしたいが、goバッチ側でなぜか23が保存されていない\n    console.log(\"Loading...\", this.state.items.length, startIndex)\n\n    // 24以上は実行しない\n    if (this.state.page >= API_LIMIT) {\n      return\n    }\n    this.setState({ moreItemsLoading: true })\n\n    const response = await fetch(\n      PATH.getUrl(\"?beforeDay=2&country=\" + this.state.page)\n    )\n    const data = await response.json()\n    var items = []\n    var parents = []\n\n    // 親記事１件ごとにリアクションを挿入していく\n    data.forEach(parent => {\n      const children = Object.assign({}, parent.reactions)\n      parent.reactions = null\n      items.push(parent)\n      parents.push(parent)\n\n      // リアクションごとの処理\n      if (children) {\n        for (const key in children) {\n          items.push(children[key])\n        }\n      }\n    })\n    console.log(items)\n\n    this.setState({\n      moreItemsLoading: false,\n      page: this.state.page + 1,\n      items: this.state.items.concat(items),\n      parents: this.state.parents.concat(parents),\n    })\n  }\n\n  handleScroll = startIndex => {\n    this.setState({ startIndex: startIndex })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <ListHead\n          startIndex={this.state.startIndex}\n          parents={this.state.parents}\n          items={this.state.items}\n        />\n        <VirtualizedTable\n          items={this.state.items}\n          hasNextPage={true}\n          moreItemsLoading={this.state.moreItemsLoading}\n          loadMoreItems={this.loadMoreItems.bind(this)}\n          handleScroll={this.handleScroll.bind(this)}\n        />\n      </div>\n    )\n  }\n}\n\nMainSportsList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  monsters: PropTypes.array.isRequired,\n}\n\nexport default withStyles(styles)(MainSportsList)\n","import React from \"react\"\nimport MainSportsList from \"./lists/MainSportsList\"\nimport PropTypes from \"prop-types\"\n\nclass ListIndex extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { offset: 0, currentPosition: 0 }\n  }\n\n  render() {\n    return (\n      <div>\n        <MainSportsList monsters={this.props.monsters} />\n      </div>\n    )\n  }\n}\n\nListIndex.propTypes = {\n  monsters: PropTypes.array.isRequired,\n}\n\nexport default ListIndex\n","import React from \"react\"\nimport ListIndex from \"./ListIndex\"\nimport * as PATH from \"../constants/common\"\nclass Top extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoaded: false,\n      error: null,\n      items: [],\n    }\n  }\n\n  componentDidMount() {\n    fetch(PATH.getUrl(\"?country=13\"))\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            items: result,\n          })\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error: error,\n          })\n        }\n      )\n  }\n\n  render() {\n    return <ListIndex monsters={this.state.items} />\n  }\n}\n\nexport default Top\n","import React from \"react\"\nimport { BrowserRouter, Route } from \"react-router-dom\"\nimport Top from \"./components/Top\"\n\nconst App = () => (\n  <BrowserRouter>\n    <div>\n      <Route exact path=\"/\" component={Top} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/home\" component={Home} />\n    </div>\n  </BrowserRouter>\n)\n\nconst Home = () => (\n  <div>\n    <h2>Home</h2>\n    <p>Welcome to ようこそ</p>\n  </div>\n)\n\nconst About = () => (\n  <div>\n    <h2>About</h2>\n    <p>フレンズに投票するページです</p>\n  </div>\n)\n\nexport default App\n","import { red } from \"@material-ui/core/colors\"\nimport { createMuiTheme } from \"@material-ui/core/styles\"\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n})\n\nexport default theme\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport { ThemeProvider } from \"@material-ui/styles\"\nimport App from \"./App\"\nimport theme from \"./theme\"\nimport * as serviceWorker from \"./serviceWorker\"\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"))\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector(\"#root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
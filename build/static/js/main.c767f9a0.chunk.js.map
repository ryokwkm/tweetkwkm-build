{"version":3,"sources":["components/lists/ListHead.js","constants/window.js","components/lists/InfinityList.js","constants/common.js","components/lists/MainSportsList.js","components/ListIndex.js","components/Top.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["ListHead","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","startIndex","parentId","retArticle","parents","forEach","parent","article","items","parent_id","Number","id","getArticleById","react_default","a","createElement","ListItem_default","className","href","target","ListItemIcon","Inbox_default","url","ListItemText_default","primary","head","React","Component","withStyles","theme","articleHeader","width","height","getWindowSize","w","window","d","document","e","documentElement","g","getElementsByTagName","innerWidth","clientWidth","innerHeight","clientHeight","MyListHeight","win","console","log","Math","floor","styles","infinateList","marginTop","RowContainer","styled","div","_templateObject","InfinityList","_ref","hasNextPage","moreItemsLoading","loadMoreItems","handleScroll","regBody","body","after","reactStringReplace","match","i","concat","Row","_ref2","index","style","ref","length","objectSpread","backgroundColor","userId","user_id","profileImage","user_image","ListItem_ListItem","button","ListItemAvatar_default","Avatar_default","alt","src","ListItemText_ListItemText","hashMatch","itemCount","dist_index_esm","isItemLoaded","onScrollHandler","_ref3","onItemsRendered","itemHeight","index_esm","itemSize","HOSTNAME","PRD","DEV","getUrl","path","hostName","location","port","MainSportsList","setState","page","stopIndex","fetch","PATH","response","json","data","children","assign","reactions","push","key","classes","root","lists_ListHead","lists_InfinityList","bind","palette","background","paper","listSection","ul","padding","ListIndex","offset","currentPosition","lists_MainSportsList","monsters","Top","isLoaded","error","_this2","then","res","result","components_ListIndex","Home","About","App","react_router_dom","react_router","exact","component","createMuiTheme","main","secondary","red","A400","default","Boolean","hostname","ReactDOM","render","ThemeProvider","CssBaseline","src_App_0","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c767f9a0.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { withStyles } from \"@material-ui/core\"\nimport ListItem from \"@material-ui/core/ListItem/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\"\nimport \"../../App.css\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport InboxIcon from \"@material-ui/icons/Inbox\"\n\nconst styles = theme => ({\n  articleHeader: {\n    width: \"100%\",\n    height: 30,\n  },\n})\n\nclass ListHead extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { startIndex: this.props.startIndex }\n  }\n\n  getArticleById(parentId) {\n    const parents = this.props.parents\n    var retArticle\n    if (parents) {\n      parents.forEach(parent => {\n        if (parent[\"id\"] === parentId) {\n          retArticle = parent\n        }\n      })\n    }\n    return retArticle\n  }\n\n  render() {\n    // const { classes } = this.props\n    const article = this.props.items[this.props.startIndex] // 今表示中の記事\n\n    if (article) {\n      var parentId = article.parent_id\n      if (Number(parentId) === 0) {\n        parentId = article.id\n      }\n      const parent = this.getArticleById(parentId)\n      if (parent) {\n        return (\n          <ListItem className={\"ArticleHeader\"}>\n            <a href={\"https://twitter.com/sportskwkm/\"} target={\"_blank\"}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n            </a>\n            <a href={parent.url} target={\"_blank\"}>\n              <ListItemText primary={parent.head} />\n            </a>\n          </ListItem>\n        )\n      }\n    }\n    return null\n  }\n}\n\nListHead.propTypes = {\n  startIndex: PropTypes.number.isRequired,\n  parents: PropTypes.array.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nexport default withStyles(styles)(ListHead)\n","export function getWindowSize() {\n  var w = window\n  var d = document\n  var e = d.documentElement\n  var g = d.getElementsByTagName(\"body\")[0]\n  var width = w.innerWidth || e.clientWidth || g.clientWidth\n  var height = w.innerHeight || e.clientHeight || g.clientHeight\n\n  return {\n    width: width,\n    height: height,\n  }\n}\n\n// 画面の幅を考慮に入れてリストの高さを決定\n// height ✕ width = 75000 程度\nexport function getListHeight() {\n  const win = getWindowSize()\n  const baseTotal = 75000\n  const baseWidth = 400\n  const widthCoefficient = 0.8\n\n  const widthFluctuation = (win.width - baseWidth) * widthCoefficient\n\n  const height = baseTotal / (baseWidth + widthFluctuation)\n  console.log(win, height)\n  return Math.floor(height)\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { FixedSizeList } from \"react-window\"\nimport InfiniteLoader from \"react-window-infinite-loader\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport * as window from \"../../constants/window\"\nimport \"../../App.css\"\nimport reactStringReplace from \"react-string-replace\"\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar/ListItemAvatar\"\nimport Avatar from \"@material-ui/core/Avatar/Avatar\"\n\nconst HeaderHeight = 30\nconst MyListHeight = window.getListHeight()\nconst styles = theme => ({\n  infinateList: {\n    width: \"100%\",\n    marginTop: HeaderHeight,\n    // backgroundColor: theme.palette.background.paper,\n  },\n})\n\nconst RowContainer = styled.div`\n  position: relative;\n  width: 100px;\n`\n\nconst InfinityList = ({\n  items,\n  moreItemsLoading,\n  hasNextPage,\n  loadMoreItems,\n  handleScroll,\n}) => {\n  //\n  const regBody = body => {\n    var after = reactStringReplace(body, /(https?:\\/\\/\\S+)/, (match, i) => (\n      <a className={\"link\"} href={match}>\n        {match}\n      </a>\n    ))\n    after = reactStringReplace(after, /@\\w+/, (match, i) => (\n      <a className={\"reply\"} href={`https://twitter.com/${match}`}>\n        @{match}\n      </a>\n    ))\n    after = reactStringReplace(\n      after,\n      /[#][Ａ-Ｚａ-ｚA-Za-z一-鿆0-9０-９ぁ-ヶｦ-ﾟー._-]+/gm,\n      (match, i) => (\n        <a\n          className={\"hash\"}\n          href={`https://twitter.com/hashtag/${match}?src=hash`}\n        >\n          #{match}\n        </a>\n      )\n    )\n    return <span>{after}</span>\n  }\n\n  const regHashTag = body => {\n    const regHash = /(^|\\W)(#[a-z\\d][\\w-]*)/gi\n    return (\n      <span>\n        {reactStringReplace(body, regHash, (hashMatch, i) => (\n          <span className={\"hashTag\"}>{hashMatch}</span>\n        ))}\n      </span>\n    )\n  }\n\n  const Row = ({ index, style, ref }) => {\n    const itemLoading = index >= items.length\n\n    if (itemLoading) {\n      return <RowContainer style={{ ...style, backgroundColor: \"grey\" }} />\n    } else {\n      var userId = items[index].user_id\n      if (Number(userId) === 0) {\n        userId = \"1093499946609762305\"\n      }\n      var profileImage = items[index].user_image\n\n      return (\n        <ListItem\n          button\n          className={\"InfiniteRow\"}\n          style={{ ...style, height: MyListHeight + \"px\" }}\n        >\n          <ListItemAvatar>\n            <a\n              href={\"https://twitter.com/intent/user?user_id=\" + userId}\n              target={\"_blank\"}\n            >\n              <Avatar alt=\"Cindy Baker\" src={profileImage} />\n            </a>\n          </ListItemAvatar>\n\n          <ListItemText\n            className={\"InfiniteRowBody\"}\n            primary={regHashTag(regBody(items[index].body))}\n          />\n        </ListItem>\n      )\n    }\n  }\n\n  const itemCount = hasNextPage ? items.length + 1 : items.length\n\n  const FixedList = ({ onItemsRendered, ref }) => {\n    const win = window.getWindowSize()\n    const height = win.height - HeaderHeight\n    const itemHeight = MyListHeight\n    return (\n      <FixedSizeList\n        className={\"InfiniteList\"}\n        height={height}\n        width={\"100%\"}\n        itemCount={itemCount}\n        itemSize={itemHeight}\n        onItemsRendered={onItemsRendered}\n        ref={ref}\n      >\n        {Row}\n      </FixedSizeList>\n    )\n  }\n\n  return (\n    <InfiniteLoader\n      className={styles.infinateList}\n      isItemLoaded={index => index < items.length - 1}\n      itemCount={itemCount}\n      loadMoreItems={loadMoreItems}\n      onScrollHandler={handleScroll}\n    >\n      {/* {({ onItemsRendered, ref }) => ( */}\n      {/* <FixedSizeList */}\n      {/* height={300} */}\n      {/* width={\"100%\"} */}\n      {/* itemCount={itemCount} */}\n      {/* itemSize={100} */}\n      {/* onItemsRendered={onItemsRendered} */}\n      {/* ref={ref} */}\n      {/* > */}\n      {/* {Row} */}\n      {/* </FixedSizeList> */}\n      {/* )} */}\n      {FixedList}\n    </InfiniteLoader>\n  )\n}\n\nexport default InfinityList\n","export const HOSTNAME = {\n  PRD: \"http://ts.2chx.net/Api/get\",\n  DEV: \"http://asuseka.net:8888/Api/get\",\n}\n\n/**\n * removeSlashEndOfPath\n * パスの末尾のスラッシュを削除\n */\nexport function removeSlashEndOfPath(path) {\n  if (path.match(/\\/$/)) {\n    return path.slice(0, -1)\n  }\n  return path\n}\n\n/**\n * getUrl\n * APIのURLを取得\n */\nexport function getUrl(path) {\n  const hostName = HOSTNAME[getEnv()]\n  if (!path) {\n    return hostName\n  } else {\n    return hostName + \"/\" + path\n  }\n}\n\n/**\n * getEnv\n * 現在の環境を取得\n */\nexport function getEnv() {\n  if (window.location.port === \"3001\") {\n    return \"DEV\"\n  } else {\n    return \"PRD\"\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { withStyles } from \"@material-ui/core/styles/index\"\n\n// import ListItem from \"@material-ui/core/ListItem/index\"\n// import ListItemText from \"@material-ui/core/ListItemText/index\"\n// import StarBorder from \"@material-ui/icons/StarBorder\"\nimport ListHead from \"./ListHead\"\nimport VirtualizedTable from \"./InfinityList\"\nimport * as PATH from \"../../constants/common\"\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  listSection: {\n    backgroundColor: \"inherit\",\n  },\n  ul: {\n    backgroundColor: \"inherit\",\n    padding: 0,\n  },\n})\n\nclass MainSportsList extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      items: [],\n      parents: [],\n      moreItemsLoading: false,\n      page: 0,\n      startIndex: 0,\n    }\n  }\n\n  async loadMoreItems(startIndex, stopIndex) {\n    const API_LIMIT = 23 // 本来２４にしたいが、goバッチ側でなぜか23が保存されていない\n    console.log(\"Loading...\", this.state.items.length, startIndex)\n\n    // 24以上は実行しない\n    if (this.state.page >= API_LIMIT) {\n      return\n    }\n    this.setState({ moreItemsLoading: true })\n\n    const response = await fetch(\n      PATH.getUrl(\"?beforeDay=2&country=\" + this.state.page)\n    )\n    const data = await response.json()\n    var items = []\n    var parents = []\n\n    // 親記事１件ごとにリアクションを挿入していく\n    data.forEach(parent => {\n      const children = Object.assign({}, parent.reactions)\n      parent.reactions = null\n      items.push(parent)\n      parents.push(parent)\n\n      // リアクションごとの処理\n      if (children) {\n        for (const key in children) {\n          items.push(children[key])\n        }\n      }\n    })\n    console.log(items)\n\n    this.setState({\n      moreItemsLoading: false,\n      page: this.state.page + 1,\n      items: this.state.items.concat(items),\n      parents: this.state.parents.concat(parents),\n    })\n  }\n\n  handleScroll = startIndex => {\n    this.setState({ startIndex: startIndex })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <ListHead\n          startIndex={this.state.startIndex}\n          parents={this.state.parents}\n          items={this.state.items}\n        />\n        <VirtualizedTable\n          items={this.state.items}\n          hasNextPage={true}\n          moreItemsLoading={this.state.moreItemsLoading}\n          loadMoreItems={this.loadMoreItems.bind(this)}\n          handleScroll={this.handleScroll.bind(this)}\n        />\n      </div>\n    )\n  }\n}\n\nMainSportsList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  monsters: PropTypes.array.isRequired,\n}\n\nexport default withStyles(styles)(MainSportsList)\n","import React from \"react\"\nimport MainSportsList from \"./lists/MainSportsList\"\nimport PropTypes from \"prop-types\"\n\nclass ListIndex extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { offset: 0, currentPosition: 0 }\n  }\n\n  render() {\n    return (\n      <div>\n        <MainSportsList monsters={this.props.monsters} />\n      </div>\n    )\n  }\n}\n\nListIndex.propTypes = {\n  monsters: PropTypes.array.isRequired,\n}\n\nexport default ListIndex\n","import React from \"react\"\nimport ListIndex from \"./ListIndex\"\nimport * as PATH from \"../constants/common\"\nclass Top extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoaded: false,\n      error: null,\n      items: [],\n    }\n  }\n\n  componentDidMount() {\n    fetch(PATH.getUrl(\"?country=13\"))\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            items: result,\n          })\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error: error,\n          })\n        }\n      )\n  }\n\n  render() {\n    return <ListIndex monsters={this.state.items} />\n  }\n}\n\nexport default Top\n","import React from \"react\"\nimport { BrowserRouter, Route } from \"react-router-dom\"\nimport Top from \"./components/Top\"\n\nconst App = () => (\n  <BrowserRouter>\n    <div>\n      <Route exact path=\"/\" component={Top} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/home\" component={Home} />\n    </div>\n  </BrowserRouter>\n)\n\nconst Home = () => (\n  <div>\n    <h2>Home</h2>\n    <p>Welcome to ようこそ</p>\n  </div>\n)\n\nconst About = () => (\n  <div>\n    <h2>About</h2>\n    <p>フレンズに投票するページです</p>\n  </div>\n)\n\nexport default App\n","import { red } from \"@material-ui/core/colors\"\nimport { createMuiTheme } from \"@material-ui/core/styles\"\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n})\n\nexport default theme\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport { ThemeProvider } from \"@material-ui/styles\"\nimport App from \"./App\"\nimport theme from \"./theme\"\nimport * as serviceWorker from \"./serviceWorker\"\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"))\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector(\"#root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}